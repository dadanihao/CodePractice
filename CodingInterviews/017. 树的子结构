输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子结构）


/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    bool Tree1Tree2(TreeNode* tree1, TreeNode* tree2)
    {
        if (tree2 == NULL){
            return true;
        }
        if (tree1 == NULL){
            return false;
        }
        if (tree1->val != tree2->val){
            return false;
        }
        return Tree1Tree2(tree1->left, tree2->left) && 
            Tree1Tree2(tree1->right, tree2->right);
    }
    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)
    {
        if(pRoot1 == NULL || pRoot2 == NULL){
            return false;
        }
        return Tree1Tree2(pRoot1, pRoot2) || 
            HasSubtree(pRoot1->left, pRoot2) ||
            HasSubtree(pRoot1->right, pRoot2);
    }
};




