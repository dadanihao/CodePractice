给定两个排序后的数组 A 和 B，其中 A 的末端有足够的缓冲空间容纳 B。 编写一个方法，将 B 合并入 A 并排序。

初始化 A 和 B 的元素数量分别为 m 和 n。

示例:

输入:
A = [1,2,3,0,0,0], m = 3
B = [2,5,6],       n = 3

输出: [1,2,2,3,5,6]
说明:

A.length == n + m

class Solution {
public:
    void merge(vector<int>& A, int m, vector<int>& B, int n) {
        int length = m+n;
        if(m==0 && n==0){
            return;
        }
        if(m==0 && n!=0){
            int k=length-1;
            while(k>=0){
                A[k] = B[k];
                k--;
            }
            return;
        }
        if(m!=0 && n==0){
            return;
        }
        for(int k=length-1,i=m-1,j=n-1; k>=0; ){
            if(B[j]>=A[i]){
                A[k] = B[j];
                k--;
                j--;
                if(j<0 && i>=0){
                    while(k>=0){
                        A[k] = A[i];
                        i--;
                        k--;
                    }
                }
            }
            else{
                A[k] = A[i];
                k--;
                i--;
                if(i<0 && j>=0){
                    while(k>=0){
                        A[k] = B[j];
                        j--;
                        k--;
                    }
                }
            }
        }

    }
};
